[project]
name = "oamc"
version = "0.1.0"
description = "Optimal Additive Manufacuring of Composites"
readme = "README.md"
requires-python = ">=3.10"
authors = [
    {name = "Nicolas Ebeling", email = "nicolas.ebeling@tum.de"}
]
dependencies = [
    "numpy",
    "scipy",
    "pyvista",
    "pyansys"
]

[project.optional-dependencies]
dev = [
    "pytest",
    "ruff",
]

[build-system]
requires = ["uv_build"]
build-backend = "uv_build"

[tool.pytest.ini_options]
addopts = ["--import-mode=importlib"]

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]
# According to PEP8.
line-length = 99
indent-width = 4
# Assume Python 3.10
target-version = "py310"

[tool.ruff.lint]
# Enable
# - a subset of pycodestyle errors ("E"),
# - Pyflakes ("F"),
# - pycodestyle warnings ("W"),
# - isort ("I").
select = ["E4", "E7", "E9", "F", "W", "I"]
# Exclude F841 because unused local variables should be ignored for now.
ignore = ["F841"]
# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
docstring-code-format = true
# Set the line length limit used when formatting code snippets in docstrings.
docstring-code-line-length = "dynamic"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "F403"]
